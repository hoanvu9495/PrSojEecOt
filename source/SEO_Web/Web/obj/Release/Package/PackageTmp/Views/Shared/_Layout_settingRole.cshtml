<!DOCTYPE html>
@using Business.CommonBusiness;
@using Web.FwCore;
@using Model.eAita;
@using StackExchange.Profiling;
@using System.Web.Script.Serialization;
@{
    //ViewBag.Title = "Cục Tin học hóa - Hệ thống Quản lý Điều hành tác nghiệp";
    UserInfoBO user = ((UserInfoBO)SessionManager.GetUserInfo());
    if (user == null)
    {
        user = new UserInfoBO();
    }
    List<ChucNangBO> lstCN = user == null ? new List<ChucNangBO>() : user.ListCNFull.ToList();

    MvcHtmlString token = null;
    try
    {
        token = Html.AntiForgeryToken();
    }
    catch { }
    HSCV_CONGVIEC CongViecCreated;
    var _CongViecCreated = SessionManager.GetValue("CongViecCreated");
    if (_CongViecCreated != null)
    {
        CongViecCreated = (HSCV_CONGVIEC)_CongViecCreated;
        SessionManager.SetValue("CongViecCreated", null);
    }
}
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <title>@ViewBag.Title</title>
    <link rel="icon" type="image/png" href="~/Content/Images/favicon.ico" />
    @Scripts.Render("~/bundles/jquery")
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Custom/js")

    @*add JQuery UI*@
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    @*end Add JQuery UI*@

    @Styles.Render("~/bundles/Custom/css")
    @Scripts.Render("~/Scripts/js")

    @Scripts.Render("~/Scripts/jQueryForm")
    @Scripts.Render("~/Scripts/CommonJS")
    <script src="~/Scripts/Common.js"></script>
    <script src="~/Scripts/datepicker-vi.js"></script>
    <script src="~/Scripts/jquery.steps.min.js"></script>
    <script src="~/Scripts/tiny_mce/tinymce.min.js"></script>
    <script src="~/Scripts/multiple-select.js"></script>
    <script src="~/Content/Custom/js/jquery.printElement.js"></script>
    <link href="~/Content/Custom/css/style.css" rel="stylesheet" />
    <link href="~/Content/Custom/css/frame.css" rel="stylesheet" />
    <link href="~/Content/Custom/css/van_ban_den/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/Custom/lobibox-master/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/Custom/lobibox-master/dist/css/Lobibox.min.css" rel="stylesheet" />
    <link href="~/Content/style-drags.css" rel="stylesheet" />
    <link href="~/Content/Custom/emoticons/support/skype/emoticons.css" rel="stylesheet" />
    <link href="~/Content/Custom/notifit/notifit.css" rel="stylesheet" />
    <link href="~/Content/Custom/css/multiple-select.css" rel="stylesheet" />
    <link href="~/Content/Custom/css/jquery.confirm.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Scripts/jquery.webui-popover.min.css">

    <script>
        var _ShowFavorite = 0;
        var _ShowImportant = 0;
        __RequestVerificationToken = '@token';
        __ShowAjaxProcessing = true;
        $(document).on({
            ajaxStart: function () {
                if (__ShowAjaxProcessing) {
                    $("#_AjaxLoading").dialog("open");
                }
                __ShowAjaxProcessing = true;
            },
            ajaxStop: function () {
                $("#_AjaxLoading").dialog("close");
                $("input[name=__RequestVerificationToken]").remove();
                $("form").append(__RequestVerificationToken);
            }
        });

        //jQuery.validator.unobtrusive.adapters.add("dropdown", function (options) {
        //    //  debugger;
        //    if (options.element.tagName.toUpperCase() == "SELECT" && options.element.type.toUpperCase() == "SELECT-ONE") {
        //        options.rules["required"] = true;
        //        if (options.message) {
        //            options.messages["required"] = options.message;
        //        }
        //    }
        //});



        $(document).ready(function () {
            _ShowFavorite = 0;
            _ShowImportant = 0;
            var header_height = $("#header-top").height();
            var menu_toolbar = $("#menu-toolbar").height();
            var block_search_form = $("#block-search-form").height();
            var window_height = $(window).height();
            var menu_left_content_scroll = window_height - header_height - menu_toolbar - block_search_form;
            $("#menu-left-content-scroll").css({ "height": menu_left_content_scroll });
            $(".right-all-page-content").css({ "min-height": menu_left_content_scroll + block_search_form });
            var total = header_height + window_height + 200;
            callNotificationdata();
            $(window).resize(function () {
                $(".content-main").css({ "min-height": $(window).height() - $(".top-main").height() - $(".footer-main").height() - 28 });
            });
            $(".content-main").css({ "min-height": $(window).height() - $(".top-main").height() - $(".footer-main").height() - 28 });

            $.ajaxSetup({
                data: {
                    __RequestVerificationToken: $("input[name=__RequestVerificationToken]").val()
                }
            });

            $(document).ajaxComplete(function (event, xhr, settings) {
                if (xhr.responseText.indexOf(atob('PCEtLUxPR19JTl9QQUdFLS0+')) > 0) {
                    event.preventDefault();
                    console.log("login")
                    window.location.href = "/Account/Login";
                }
                if (xhr.responseText.indexOf(atob('PCEtLU1BSU5UQUlOX1BBR0UtLT4=')) > 0) {
                    event.preventDefault();
                    console.log("maintain")
                    window.location.href = "/Home/ServerMaintenance";
                }
            });

            $("#_AjaxLoading").dialog({
                autoOpen: false,
                modal: true,
                width: 200,
                dialogClass: 'noTitleStuff',
                height: 45,
                resizable: false,
                show: {
                    effect: "fade",
                    duration: 200
                },
                hide: {
                    effect: "fade",
                    duration: 200
                }
            });

            ////active url dc chon
            //var url = window.location.href;
            //var urlAbsolute = "http://localhost:2014";

            //var iNum = url.substring(urlAbsolute.length, url.length);
            //alert(iNum);
            //$("ul.MenuLevel2List li.MenuLevel2Item").removeClass("Active");
            //$('ul.MenuLevel2List li.MenuLevel2Item a[href="' + iNum + '"]').parent().addClass('Active');

            $("input[name=__RequestVerificationToken]").remove();
            $("form").append(__RequestVerificationToken);

            var currentMenuID = sessionStorage.getItem("currentMenuID");
            if (currentMenuID == null) {
                currentMenuID = 0;
            }
            if ($("#m-" + currentMenuID).parent().hasClass("menu")) {
                $("#folder-path").html($("#m-" + currentMenuID).html());
            } else {
                var cname = $("#m-" + currentMenuID).html();
                var pname = $($("#m-" + currentMenuID).parent().parent().parent().find("a").get(0)).html();

                $("#folder-path").html(pname + "&nbsp;&nbsp;&nbsp;»&nbsp;&nbsp;&nbsp;" + cname);
            }

        });

        function DisableAjaxProcessing() {
            __ShowAjaxProcessing = false;
        }

        //function NotificationCenter($scope) {
        //    var permissionLevels = {};
        //    permissionLevels[notify.PERMISSION_GRANTED] = 0;
        //    permissionLevels[notify.PERMISSION_DEFAULT] = 1;
        //    permissionLevels[notify.PERMISSION_DENIED] = 2;

        //    $scope.isSupported = notify.isSupported;
        //    $scope.permissionLevel = permissionLevels[notify.permissionLevel()];

        //    $scope.getClassName = function () {
        //        if ($scope.permissionLevel === 0) {
        //            return "allowed"
        //        } else if ($scope.permissionLevel === 1) {
        //            return "default"
        //        } else {
        //            return "denied"
        //        }
        //    }

        //    $scope.callback = function () {
        //        console.log("test");
        //    }

        //    $scope.requestPermissions = function () {
        //        notify.requestPermission(function () {
        //            $scope.$apply($scope.permissionLevel = permissionLevels[notify.permissionLevel()]);
        //        })
        //    }
        //}

        //function show() {
        //    alert("ok");
        //    notify.createNotification("Notification", { body: "Body", icon: "alert.ico" })
        //}
    </script>
</head>

@*data-ng-controller="NotificationCenter"*@
<body>
    @*<div class="warningMsg" data-ng-show="!isSupported" style="display: none;">
            Desktop notifications are currently not supported for your browser.
            <p>
                Open the page in Chrome(version 23+), Safari(version6+), Firefox(with ff-html5notifications plugin installed) and IE9+.
        </div>
        <a class="notificationLevel" ng-class="getClassName()" data-ng-click="requestPermissions()" data-ng-pluralize data-count="permissionLevel" when="{
                                                                    '0': 'Notifications allowed.',
                                                                    '1': 'Notifications not allowed. (click to enable)',
                                                                    '2': 'Notifications denied. (Change notifications permission in you browser\'s settings)'}">
        </a>*@

    <div id="_AjaxLoading">
        Đang xử lý...
    </div>
    <div id="_GlobalMessage">
    </div>
    @*<button onclick="show()">Show notification</button>*@
    @*class="tbl-wrap"*@
    <div id="page-wrapper" style="background: #f1f1f1 none repeat scroll 0 0; ">
        <div id="header-top">
            <div class="left-all-page" style="width:355px">
                <div id="menu-top-left" class="btn-group" role="group">
                    <div class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="cursor:pointer; padding:0px;">
                        <span class="menu-images" style="margin: 3px 0px; float: left; width: 100%;">Menu</span>
                        <div class="menu-images">
                            <img src="/Content/Images/Menu.png" />
                        </div>
                    </div>
                    <div id="dropdown-menu-top" class="dropdown-menu">
                        @if (lstCN != null)
                        {
                            var item_row = 6;
                            var row = Math.Ceiling((double)lstCN.Count / item_row);
                            var ListThaoTac = user.ListThaoTac;
                            var ListCNFull = user.ListCN;
                            for (int j = 0; j < row; j++)
                            {
                                <div class="row row-@j">
                                    @for (int i = j * item_row; i < (j + 1) * item_row; i++)
                                    {
                                        if (i < lstCN.Count)
                                        {
                                            <div class="row-item row-item-@i">
                                                @{
                                            var lstChucNang = ListCNFull.Where(x => x.CHUCNANG_CHA == lstCN[i].DM_CHUCNANG_ID).OrderBy(x => x.TT_HIENTHI).Select(x => x.DM_CHUCNANG_ID).ToList();
                                            var ThaoTac = ListThaoTac.Where(x => lstChucNang.Contains(x.DM_CHUCNANG_ID)).FirstOrDefault();




                                            if (ThaoTac != null)
                                            {
                                                <a class="ico-@i" href="@ThaoTac.MENU_LINK" id="ico-@lstCN[i].TT_HIENTHI" data-parent="@lstCN[i].DM_CHUCNANG_ID">
                                                    <img src="@System.Configuration.ConfigurationManager.AppSettings["HSCBAvatar"].Replace("~", "")@lstCN[i].ICONPATH">
                                                </a>

                                                    <a class="ico-@i" href="@ThaoTac.MENU_LINK" id="ico-@lstCN[i].TT_HIENTHI" data-parent="@lstCN[i].DM_CHUCNANG_ID">@lstCN[i].TEN_CHUCNANG</a>
                                            }
                                            else
                                            {
                                                <a class="ico-@i" href="@lstCN[i].URL" id="ico-@lstCN[i].TT_HIENTHI" data-parent="@lstCN[i].DM_CHUCNANG_ID">
                                                    <img src="@System.Configuration.ConfigurationManager.AppSettings["HSCBAvatar"].Replace("~", "")@lstCN[i].ICONPATH">
                                                </a>

                                                    <a class="ico-@i" href="@lstCN[i].URL" id="ico-@lstCN[i].TT_HIENTHI" data-parent="@lstCN[i].DM_CHUCNANG_ID">@lstCN[i].TEN_CHUCNANG</a>
                                            }
                                                }




                                                @*<a class="ico-@i" href="javascript:openMenu( @lstCN[i].DM_CHUCNANG_ID,@user.RoleID,@user.UserID)" id="ico-@lstCN[i].TT_HIENTHI" data-parent="@lstCN[i].DM_CHUCNANG_ID">@lstCN[i].TEN_CHUCNANG</a>*@

                                            </div>
                                        }
                                    }
                                </div>

                            }

                        }
                    </div>
                </div>

                <div id="top-logo">
                    <h1><a href="/home/optionrole">eGovOffice</a></h1>
                </div>
            </div>
            <div class="right-all-page" style="border:0px !important;width:calc(100% - 365px);margin:0;padding-bottom:0px;">
                <div id="top-info">
                    <div class="site-name">
                        <h1 style="font-size: 21px; color: rgb(1, 104, 151);">@user.TenCoSo</h1>
                        <h1>Hệ thống Quản lý Điều hành tác nghiệp</h1>
                    </div>
                    <div class="middle">
                        <b style="margin-bottom: 13px;display: block;">Phiên làm việc: @user.Fullname</b>
                        <p><span id="servertime"></span></p>

                    </div>
                    <div class="right">
                        <div class="notification right-child">
                            <a href="javascript:void(0)" id="lnkNotification" data-comment="Thông báo mới" class="show-pop-notification" data-contrains="vertical" data-placement="bottom-left" title="Thông báo">
                                <span id="c-notifi" class="c-notifi">999</span>
                            </a>
                        </div>
                        <div class="messages right-child">
                            <a href="/chatarea/chat" id="lnkChat" data-comment="Tin nhắn mới" class="show-pop-chat" data-contrains="vertical" data-placement="bottom-left" title="Tin nhắn">
                                <span id="c-chat" class="c-chat">999</span>
                            </a>
                        </div>
                        <div class="settings right-child">
                            <div class="btn-group" role="group">
                                <div class="dropdown-toggle settings-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="cursor:pointer; padding:0px;">

                                </div>
                                <div id="dropdown-menu-settings" class="dropdown-menu">
                                    <ul>
                                        @*<li><a href="javascript:ConfigFunctionDefault()">Cấu hình chức năng mặc định</a></li>*@
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="user-admin">
                            <input type="hidden" id="globalCoSoID" value="@user.CoSoID" />
                            <input type="hidden" id="globalUserName" value="@user.Username" />
                            <input type="hidden" id="globalFullName" value="@user.Fullname" />
                            @Html.Partial("_InfoBox")
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div id="main-page">
            @RenderBody()
            @Html.AntiForgeryToken()
        </div>
        <div class="user-online">

            <div id="pnl-useronline" class="pnl-useronline">
                <div class="header-box-chat">
                    <h3 class="group-tittle vbdi_search" onclick="boxchatshow();">
                        Thành viên trực tuyến
                    </h3>
                    <div class="options">
                        <div class="add-new-message">
                            <a href="javascript:void(0)" title="Tin nhắn mới">
                                Tin nhắn mới
                            </a>
                        </div>
                        <div class="settings-box-chat">
                            <div class="btn-group" role="group">
                                <div class="dropdown-toggle settings-box" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="cursor:pointer; padding:0px;">
                                    <a href="javascript:void(0)">
                                    </a>
                                </div>
                                <div id="dropdown-menu-chat-settings" class="dropdown-menu">
                                    <ul>
                                        <li><a href="javascript:void(0)">Âm thanh trò chuyển</a></li>
                                        <li><a href="javascript:void(0)">Biểu tượng cảm xúc</a></li>
                                        <li><a href="javascript:void(0)">Cài đặt nâng cao</a></li>

                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="content-box" style="display:none;">
                    <div class="content-box-chat" id="content-box-chat">
                        <ul class="list-user"></ul>
                    </div>
                    <div class="search-box-chat">
                        <input type="submit" name="" value="" />
                        <input type="text" name="" placeholder="Tìm kiếm" id="search-box" />
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div id="pnl-chat">
    </div>
    <div id="pnl-notification">
    </div>
    <div class="modal fade" id="functionDefault_dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" style="width:1000px;">
            <div class="modal-content" id="functionDefault_user">
            </div>
        </div>
    </div>
    <script src="~/Scripts/jquery.webui-popover.min.js"></script>
    <script src="~/Content/Custom/notifit/notifit.js"></script>
    <script src="~/Content/Custom/js/jquery.confirm.js"></script>
    <script src="~/Content/Custom/css/van_ban_den/collapse.js"></script>
    <script src="~/Content/Custom/css/van_ban_den/modal.js"></script>
    <script src="~/Content/Custom/css/van_ban_den/dropdown.js"></script>
    <script src="~/Content/Custom/emoticons/lib/emoticons.js"></script>
    <script src="~/Content/Custom/emoticons/lib/definition.js"></script>
    <script src="~/Content/Custom/lobibox-master/dist/js/lobibox.min.js"></script>
    @*<script src="~/Nodejs/socket.io-client/socket.io.js"></script>*@
    <script src="http://127.0.0.1:3000/socket.io/socket.io.js"></script>
    <script src="~/Nodejs/main.js"></script>
    <script>

        function ConfigFunctionDefault() {
            $.ajax({
                url: '/Home/ConfigFunctionDefault',
                type: 'post',
                cache: false,
                success: function (data) {
                    $("#functionDefault_user").html(data);
                    $("#functionDefault_dialog").modal("show");
                },
                error: function (xhr) {
                    CommonJS.alert(xhr.responseText);
                }
            });
        }
        function boxchatshow() {
            $("#content-box").slideToggle(1);
        }
        var _userarray = '@Html.Raw(new JavaScriptSerializer().Serialize(user.ListUserBO))';
        var userarray = JSON.parse(_userarray);
        var _usernamearray = '@Html.Raw(user.ListUserName)';
        var usernamearray = JSON.parse(_usernamearray);
        var soCuaSoChat = 0;
        var cosoId = $("#globalCoSoID").val();
        var cur_username = $("#globalUserName").val();
        var cur_fullname = $("#globalFullName").val();
        var isChatPanel = false;
        var itemInListChatPanel = 0;
        var chatPanel = $("#isChatPanel").val();
        if (chatPanel != undefined && chatPanel == 1) {
            isChatPanel = true;
            LoadChatBox('0', $("#userfirst").attr("data-fu"), $("#userfirst").attr("data-tu"), $("#userfirst").attr("data-ffu"), $("#userfirst").attr("data-ftu"));
        }
        function showBieuTuong(chat_id, fromUser, toUser, fromFullName, toFullName) {
            //alert(chat_id);
            if ($("#" + chat_id).hasClass("active") == false) {
                $("#" + chat_id).addClass("active");
            }
            $("#" + chat_id + " .overview").html($.emoticons.toString());
            $("#" + chat_id + " .overview").toggle();
            $("#" + chat_id + " .overview .emoticon").click(function () {
                $("#" + chat_id + " .c-input").val($.emoticons.replace($(this).html()));
                SendChat(fromUser, toUser, fromFullName, toFullName, chat_id);
                $("#" + chat_id + " .overview").hide();
            });
        }
        //$(window).scroll(function () {
        //    // Nếu cuộn được hơn 150px rồi
        //    var header_height = $("#header-top").height();
        //    var body_height = $("#main-page").height();
        //    var window_height = $(window).height();
        //    var total = header_height + window_height + 200;

        //    if (body_height > total) {
        //        if ($(this).scrollTop() > 200) {
        //            $("#header-top").css({ "position": "fixed", "left": "0px", "top": "0px" });
        //        } else {
        //            $("#header-top").css({ "position": "relative", "top": "0px" });
        //        }
        //    }
        //}
        //	);
        //sendFileAttach
        function sendFileAttach(chat_id) {
            $("#" + chat_id + " .fileAttach").click();
        }
        function sendFileAttachImage(chat_id) {
            $("#" + chat_id + " .fileAttachImage").click();
        }
        function chatToUser(username) {
            var fullname = $("span[data-id=" + username + "]").html();
            var fromUser = '@user.Username';
            var fullName = '@user.Fullname';
            //Tạo 1 cửa sổ chat, lưu trên node server
            socket.emit('create chat to user', {
                cosoId: cosoId, from_user: fromUser,
                to_user: username, from_fullname: fullName, to_fullname: fullname,
                current_UserName: cur_username
            });
        }

        function chatToUserFromJob(username, fullname) {
            var fromUser = '@user.Username';
            var fullName = '@user.Fullname';
            //Tạo 1 cửa sổ chat, lưu trên node server
            socket.emit('create chat to user', {
                cosoId: cosoId, from_user: fromUser,
                to_user: username, from_fullname: fullName, to_fullname: fullname,
                current_UserName: cur_username
            });
        }

        function CloseChatBox(fromUser, toUser) {
            //Emit lên server để xóa chat box này trong mảng Chats đi
            if (cur_username == fromUser) {
                socket.emit('delete chat by fromUser', { cosoId: cosoId, from_user: fromUser, to_user: toUser, from_UserJoin: 0 });
            }
            else if (cur_username == toUser) {
                socket.emit('delete chat by toUser', { cosoId: cosoId, from_user: fromUser, to_user: toUser, to_UserJoin: 0 });
            }
            //Xóa box chat tại client
            var chat_id = cosoId + "_" + fromUser + "_" + toUser;
            $("#" + chat_id).remove();
            soCuaSoChat = 0;
            $("#pnl-chat .chat").each(function () {
                var right = 200;
                if (soCuaSoChat >= 1) {
                    right += (250 * soCuaSoChat) + (10 * soCuaSoChat);
                }
                $(this).css("right", right);
                soCuaSoChat++;
            });
        }
        socket.on('open window chat for User', function (data) {
            if (isChatPanel == true) {
                $.ajax({
                    type: "POST",
                    url: '/ChatArea/Chat/ChatContent',
                    cache: false,
                    data: {
                        fromUser: data.fromUser,
                        toUser: data.toUser,
                        fromFullName: data.fromFullName,
                        toFullName: data.toFullName,
                        chatId: data.chatId
                    },
                    success: function (datachat) {
                        $("#pnlChatContent").html(datachat);
                        //$("#pnlChatContent").find("input[class='c-input']").focus();
                        $(".friend-list li").each(function () {
                            $(this).removeClass("active");
                        });
                        $(".friend-list li[data-id='" + itemInListChatPanel + "']").addClass("active");
                        $(".chat-alert[data-id='" + itemInListChatPanel + "']").addClass("text-null");
                        $(".chat-alert[data-id='" + itemInListChatPanel + "']").html("");
                    }
                });
            } else {
                $("#" + data.chatId).addClass("active");
                $("#" + data.chatId).find("input[class='c-input']").focus();
            }
        });
        //open window chat for fromUser
        socket.on('open window chat for fromUser', function (data) {
            if (cur_username === data.fromUser) {
                var chat_id = data.chatId;
                //Nếu đang ở Chat Panel
                if (isChatPanel == true) {
                    $.ajax({
                        type: "POST",
                        url: '/ChatArea/Chat/ChatContent',
                        cache: false,
                        data: {
                            fromUser: data.fromUser,
                            toUser: data.toUser,
                            fromFullName: data.fromFullName,
                            toFullName: data.toFullName,
                            chatId: data.chatId
                        },
                        success: function (datachat) {
                            $("#pnlChatContent").html(datachat);
                            //$("#pnlChatContent").find("input[class='c-input']").focus();
                            $(".friend-list li").each(function () {
                                $(this).removeClass("active");
                            });
                            $(".friend-list li[data-id='" + itemInListChatPanel + "']").addClass("active");
                            $(".chat-alert[data-id='" + itemInListChatPanel + "']").addClass("text-null");
                            $(".chat-alert[data-id='" + itemInListChatPanel + "']").html("");
                        }
                    });
                }
                else {
                    //Nếu không ở Chat Panel
                    //Thêm 1 cửa sổ chat dạng box chat
                    if (data.chat_position == -1 || data.fromUserJoin == 0) {
                        __ShowAjaxProcessing = false;
                        $.ajax({
                            type: "POST",
                            url: '/Common/Chat',
                            cache: false,
                            data: {
                                cosoId: data.cosoId,
                                fromUser: data.fromUser,
                                toUser: data.toUser,
                                fromFullName: data.fromFullName,
                                toFullName: data.toFullName,
                                soCuaSoChat: soCuaSoChat,
                                reload: 0,
                                chat_id: data.chatId,
                                index: data.index
                            },
                            success: function (dataAppend) {
                                soCuaSoChat += 1;
                                $("#pnl-chat").append(dataAppend);
                                if (data.fromUserJoin == 0 && data.msg != undefined) {
                                    var currentdate = new Date();
                                    var datetime = currentdate.getHours() + ":"
                                                + currentdate.getMinutes() + ":"
                                                + currentdate.getSeconds();
                                    var appendHtml = '<div class="fbChatConvItem">';
                                    appendHtml += '<div class="messages">';
                                    appendHtml += '<div class="direction_ltr">';
                                    appendHtml += '<b class="st">' + data.toFullName + '</b> <span class="s-date">' + datetime + '</span>';
                                    appendHtml += '<p>' + $.emoticons.replace(data.msg) + '</p>';
                                    appendHtml += '</div></div></div>';
                                    $("#" + chat_id).find(".conversation").append(appendHtml);
                                    $("#" + chat_id + " .c-content").animate({ scrollTop: $("#" + chat_id + " .c-content").prop("scrollHeight") }, 'slow');
                                }
                                $("#" + chat_id).find("input[class='c-input']").focus();
                            }
                        });
                        __ShowAjaxProcessing = true;
                    }
                    else {
                        //Hiển thị cửa sổ chat đã tồn tại
                        $("#" + chat_id).addClass("active");
                        $("#" + chat_id).find("input[class='c-input']").focus();
                    }
                }
            }

        });

        //appen chat msg for fromUser
        socket.on('appen chat msg for fromUser', function (data) {
            __ShowAjaxProcessing = false;
            if ($("#globalUserName").val() === data.fromUser) {
                var appendable = true;
                if (isChatPanel) {
                    var elem_li = $(".friend-list li[data-user='" + data.toUser + "']");
                    if (elem_li.hasClass("active") == false) {
                        appendable = false;
                        var inboundMsg = elem_li.find("small").html();
                        elem_li.find("small").removeClass("text-null");
                        if (inboundMsg.length > 0) {
                            elem_li.find("small").html(parseInt(elem_li.find("small").html()) + 1);
                        }
                        else {
                            elem_li.find("small").html("1");
                        }
                    }
                }
                if (!isChatPanel || appendable) {
                    var chat_id = data.chatId;
                    //Hiển thị cửa sổ chat đã tồn tại
                    if ($("#" + chat_id).hasClass("active") == false) {
                        $("#" + chat_id).addClass("active");
                    }
                    $("#" + chat_id).find("input[class='c-input']").focus();
                    var currentdate = new Date();
                    var datetime = currentdate.getHours() + ":"
                                + currentdate.getMinutes() + ":"
                                + currentdate.getSeconds();
                    var appendHtml = '<div class="fbChatConvItem">';
                    appendHtml += '<div class="messages">';
                    appendHtml += '<div class="direction_ltr">';
                    appendHtml += '<b class="st">' + data.toFullName + '</b> <span class="s-date">' + datetime + '</span>';

                    appendHtml += '<p>' + $.emoticons.replace(data.msg) + '</p>';

                    appendHtml += '</div></div></div>';
                    $("#" + chat_id).find(".conversation").append(appendHtml);
                    $("#" + chat_id + " .c-content").animate({ scrollTop: $("#" + chat_id + " .c-content").prop("scrollHeight") }, 'slow');
                }
            }
            __ShowAjaxProcessing = true;
        });

        //open window chat for toUser
        socket.on('open window chat for toUser', function (data) {
            if (cur_username == data.toUser) {
                var chat_id = data.chatId;
                //Nếu đang ở Chat Panel
                if (isChatPanel == true) {
                    $.ajax({
                        type: "POST",
                        url: '/ChatArea/Chat/ChatContent',
                        cache: false,
                        data: {
                            fromUser: data.fromUser,
                            toUser: data.toUser,
                            fromFullName: data.fromFullName,
                            toFullName: data.toFullName,
                            chatId: data.chatId
                        },
                        success: function (datachat) {
                            $("#pnlChatContent").html(datachat);
                            //$("#pnlChatContent").find("input[class='c-input']").focus();
                            $(".friend-list li").each(function () {
                                $(this).removeClass("active");
                            });
                            $(".friend-list li[data-id='" + itemInListChatPanel + "']").addClass("active");
                            $(".chat-alert[data-id='" + itemInListChatPanel + "']").addClass("text-null");
                            $(".chat-alert[data-id='" + itemInListChatPanel + "']").html("");
                        }
                    });
                }
                else {
                    __ShowAjaxProcessing = false;
                    //Thêm 1 cửa sổ chat
                    $.ajax({
                        type: "POST",
                        url: '/Common/Chat',
                        cache: false,
                        data: {
                            cosoId: data.cosoId,
                            fromUser: data.fromUser,
                            toUser: data.toUser,
                            fromFullName: data.fromFullName,
                            toFullName: data.toFullName,
                            soCuaSoChat: soCuaSoChat,
                            reload: 0,
                            chat_id: chat_id,
                            index: data.index
                        },
                        success: function (datachat) {
                            soCuaSoChat += 1;
                            $("#pnl-chat").append(datachat);
                            $("#" + chat_id).find("input[class='c-input']").focus();
                        }
                    });
                    __ShowAjaxProcessing = true;
                }
            }
        });
        //appen chat msg for toUser
        socket.on('appen chat msg for toUser', function (data) {
            if (cur_username === data.toUser) {
                var appendable = true;
                if (isChatPanel) {
                    var elem_li = $(".friend-list li[data-user='" + data.fromUser + "']");
                    if (elem_li.hasClass("active") == false) {
                        appendable = false;
                        var inboundMsg = elem_li.find("small").html();
                        elem_li.find("small").removeClass("text-null");
                        if (inboundMsg.length > 0) {
                            elem_li.find("small").html(parseInt(elem_li.find("small").html()) + 1);
                        }
                        else {
                            elem_li.find("small").html("1");
                        }
                    }
                }
                if (!isChatPanel || appendable) {
                    var chat_id = data.chatId;
                    //Hiển thị cửa sổ chat đã tồn tại
                    if ($("#" + chat_id).hasClass("active") == false) {
                        $("#" + chat_id).addClass("active");
                    }
                    $("#" + chat_id).find("input[class='c-input']").focus();
                    var currentdate = new Date();
                    var datetime = currentdate.getHours() + ":"
                                + currentdate.getMinutes() + ":"
                                + currentdate.getSeconds();
                    var appendHtml = '<div class="fbChatConvItem">';
                    appendHtml += '<div class="messages">';
                    appendHtml += '<div class="direction_ltr">';
                    appendHtml += '<b class="st">' + data.fromFullName + '</b> <span class="s-date">' + datetime + '</span>';
                    appendHtml += '<p>' + $.emoticons.replace(data.msg) + '</p>';
                    appendHtml += '</div></div></div>';
                    $("#" + chat_id).find(".conversation").append(appendHtml);
                    $("#" + chat_id + " .c-content").animate({ scrollTop: $("#" + chat_id + " .c-content").prop("scrollHeight") }, 'slow');
                }
            }
        });
        //DisplayTyping
        function DisplayTyping(fromUser, toUser, fromFullName, toFullName) {
            var chat_id = cosoId + "_" + fromUser + "_" + toUser;
            if (cur_username == fromUser) {
                socket.emit('display fromuser typing', {
                    cosoId: cosoId, from_user: fromUser, to_user: toUser,
                    from_fullname: fromFullName, to_fullname: toFullName
                });
            }
            else {
                socket.emit('display touser typing', {
                    cosoId: cosoId, from_user: fromUser, to_user: toUser,
                    from_fullname: fromFullName, to_fullname: toFullName
                });
            }
        }
        //HideTyping khi focusout
        function HideTyping(fromUser, toUser, fromFullName, toFullName) {
            var chat_id = cosoId + "_" + fromUser + "_" + toUser;
            if (cur_username == fromUser) {
                socket.emit('hide fromuser typing', {
                    cosoId: cosoId, from_user: fromUser, to_user: toUser,
                    from_fullname: fromFullName, to_fullname: toFullName
                });
            }
            else {
                socket.emit('hide touser typing', {
                    cosoId: cosoId, from_user: fromUser, to_user: toUser,
                    from_fullname: fromFullName, to_fullname: toFullName
                });
            }
        }
        //display typing for toUser
        socket.on('display typing for toUser', function (data) {
            if (cur_username == data.toUser) {
                var chat_id = data.chatId;
                //fromUser typing
                $("#" + chat_id + " .c-tip").html(data.fromFullName + " đang trả lời ...");
            }
        });
        //display typing for toUser
        socket.on('display typing for fromUser', function (data) {
            if (cur_username == data.fromUser) {
                var chat_id = data.chatId;
                //fromUser typing
                $("#" + chat_id + " .c-tip").html(data.toFullName + " đang trả lời ...");
            }
        });

        //hide typing for toUser
        socket.on('hide typing for toUser', function (data) {
            if (cur_username == data.toUser) {
                var chat_id = data.chatId;
                //fromUser typing
                $("#" + chat_id + " .c-tip").html("");
            }
        });
        //hide typing for toUser
        socket.on('hide typing for fromUser', function (data) {
            if (cur_username == data.fromUser) {
                var chat_id = data.chatId;
                //fromUser typing
                $("#" + chat_id + " .c-tip").html("");
            }
        });
        //SendChatPanel
        function SendChatPanel(fromUser, toUser, fromFullName, toFullName, chat_id) {
            var content = $("#" + chat_id).find("input[class='c-input']").val();
            var appendHtml = "";
            if (content.length > 0) {
                //alert(content);
                //Emit lên server để gửi thông tin chat cho người nhận
                if (cur_username == fromUser) {
                    var currentdate = new Date();
                    var datetime = currentdate.getHours() + ":"
                                + currentdate.getMinutes() + ":"
                                + currentdate.getSeconds();
                    appendHtml = '<div class="fbChatConvItem">';
                    appendHtml += '<div class="messages">';
                    appendHtml += '<div class="direction_ltr">';
                    appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                    appendHtml += '<p class="cl">' + $.emoticons.replace(content) + '</p>';
                    appendHtml += '</div></div></div>';
                    $("#" + chat_id).find(".conversation").append(appendHtml);
                    $("#" + chat_id + " .c-content").animate({ scrollTop: $("#" + chat_id + " .c-content").prop("scrollHeight") }, 'slow');
                    var userdata = {
                        cosoId: cosoId, from_user: fromUser, to_user: toUser,
                        from_fullname: fromFullName, to_fullname: toFullName,
                        msg: content
                    };
                    InsertChatContent($.emoticons.replace(content), fromUser, toUser, 0, cosoId, chat_id, "fromUser", userdata);
                    //alert("goi ham: send chat by fromUser");
                    //socket.emit('send chat by fromUser', {
                    //    cosoId: cosoId, from_user: fromUser, to_user: toUser,
                    //    from_fullname: fromFullName, to_fullname: toFullName,
                    //    msg: content
                    //});
                }
                else if (cur_username == toUser) {
                    var currentdate = new Date();
                    var datetime = currentdate.getHours() + ":"
                                + currentdate.getMinutes() + ":"
                                + currentdate.getSeconds();
                    appendHtml = '<div class="fbChatConvItem">';
                    appendHtml += '<div class="messages">';
                    appendHtml += '<div class="direction_ltr">';
                    appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                    appendHtml += '<p class="cl">' + $.emoticons.replace(content) + '</p>';
                    appendHtml += '</div></div></div>';
                    $("#" + chat_id).find(".conversation").append(appendHtml);
                    $("#" + chat_id + " .c-content").animate({ scrollTop: $("#" + chat_id + " .c-content").prop("scrollHeight") }, 'slow');
                    var userdata = {
                        cosoId: cosoId, from_user: fromUser, to_user: toUser,
                        from_fullname: fromFullName, to_fullname: toFullName,
                        msg: content
                    };
                    InsertChatContent($.emoticons.replace(content), toUser, fromUser, 0, cosoId, chat_id, "toUser", userdata);

                    //socket.emit('send chat by toUser', {
                    //    cosoId: cosoId, from_user: fromUser, to_user: toUser,
                    //    from_fullname: fromFullName, to_fullname: toFullName,
                    //    msg: content
                    //});
                }
            }
            $("#" + chat_id).find("input[class='c-input']").val("").focus();
        }

        //SendChat
        function SendChat(fromUser, toUser, fromFullName, toFullName, chat_id) {
            var content = $("#" + chat_id).find("input[class='c-input']").val();
            var appendHtml = "";
            if (content.length > 0) {
                //alert(content);
                //Emit lên server để gửi thông tin chat cho người nhận
                if (cur_username == fromUser) {
                    var currentdate = new Date();
                    var datetime = currentdate.getHours() + ":"
                                + currentdate.getMinutes() + ":"
                                + currentdate.getSeconds();
                    appendHtml = '<div class="fbChatConvItem">';
                    appendHtml += '<div class="messages">';
                    appendHtml += '<div class="direction_ltr">';
                    appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                    appendHtml += '<p class="cl">' + $.emoticons.replace(content) + '</p>';
                    appendHtml += '</div></div></div>';
                    $("#" + chat_id).find(".conversation").append(appendHtml);
                    $("#" + chat_id + " .c-content").animate({ scrollTop: $("#" + chat_id + " .c-content").prop("scrollHeight") }, 'slow');
                    var userdata = {
                        cosoId: cosoId, from_user: fromUser, to_user: toUser,
                        from_fullname: fromFullName, to_fullname: toFullName,
                        msg: content
                    };
                    InsertChatContent($.emoticons.replace(content), fromUser, toUser, 0, cosoId, chat_id, "fromUser", userdata);
                    //alert("goi ham: send chat by fromUser");
                    //socket.emit('send chat by fromUser', {
                    //    cosoId: cosoId, from_user: fromUser, to_user: toUser,
                    //    from_fullname: fromFullName, to_fullname: toFullName,
                    //    msg: content
                    //});
                }
                else if (cur_username == toUser) {
                    var currentdate = new Date();
                    var datetime = currentdate.getHours() + ":"
                                + currentdate.getMinutes() + ":"
                                + currentdate.getSeconds();
                    appendHtml = '<div class="fbChatConvItem">';
                    appendHtml += '<div class="messages">';
                    appendHtml += '<div class="direction_ltr">';
                    appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                    appendHtml += '<p class="cl">' + $.emoticons.replace(content) + '</p>';
                    appendHtml += '</div></div></div>';
                    $("#" + chat_id).find(".conversation").append(appendHtml);
                    $("#" + chat_id + " .c-content").animate({ scrollTop: $("#" + chat_id + " .c-content").prop("scrollHeight") }, 'slow');
                    var userdata = {
                        cosoId: cosoId, from_user: fromUser, to_user: toUser,
                        from_fullname: fromFullName, to_fullname: toFullName,
                        msg: content
                    };
                    InsertChatContent($.emoticons.replace(content), toUser, fromUser, 0, cosoId, chat_id, "toUser", userdata);

                    //socket.emit('send chat by toUser', {
                    //    cosoId: cosoId, from_user: fromUser, to_user: toUser,
                    //    from_fullname: fromFullName, to_fullname: toFullName,
                    //    msg: content
                    //});
                }
            }
            $("#" + chat_id).find("input[class='c-input']").val("").focus();
        }

        function SendChatFile(data, fromUser, toUser, fromFullName, toFullName) {
            var chat_id = cosoId + "_" + fromUser + "_" + toUser;
            var OutFilePath = data.OutFilePath;
            var OutFileName = data.OutFileName;
            var OutFileExt = data.OutFileExt;
            var OutFileID = data.OutFileID;
            var content = "";
            var appendHtml = "";
            if (OutFileName.length > 0) {
                for (i = 0; i < OutFileName.length; i++) {
                    var fileExt = OutFileExt[i];
                    if (fileExt.match(/\.(jpg|jpeg|png|gif)$/)) {
                        content += '<p><a class="img" href="/common/downloadfile/' + OutFileID[i] + '"><img style="width: auto;max-width: 150px;" src="' + OutFilePath[i] + '"></a></p?<br>';
                    }
                    else {
                        content += '<p class="cl c-hasfile"><a class="file ' + fileExt.replace(".", "") + '" href="/common/downloadfile/' + OutFileID[i] + '">' + OutFileName[i] + '</a></p><br>';
                    }
                }
                if (content.length > 0) {
                    //alert(content);
                    //Emit lên server để gửi thông tin chat cho người nhận
                    if (cur_username == fromUser) {
                        var currentdate = new Date();
                        var datetime = currentdate.getHours() + ":"
                                    + currentdate.getMinutes() + ":"
                                    + currentdate.getSeconds();
                        appendHtml = '<div class="fbChatConvItem">';
                        appendHtml += '<div class="messages">';
                        appendHtml += '<div class="direction_ltr">';
                        appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                        appendHtml += content;
                        appendHtml += '</div></div></div>';
                        $("#" + chat_id).find(".conversation").append(appendHtml);
                        $("#" + chat_id + " .c-content").animate({ scrollTop: $("#" + chat_id + " .c-content").prop("scrollHeight") }, 'slow');
                        var userdata = {
                            cosoId: cosoId, from_user: fromUser, to_user: toUser,
                            from_fullname: fromFullName, to_fullname: toFullName,
                            msg: content
                        };
                        InsertChatContent($.emoticons.replace(content), fromUser, toUser, 0, cosoId, chat_id, "fromUser", userdata);
                        //alert("goi ham: send chat by fromUser"); //đã chạy
                        //socket.emit('send chat by fromUser', {
                        //    cosoId: cosoId, from_user: fromUser, to_user: toUser,
                        //    from_fullname: fromFullName, to_fullname: toFullName,
                        //    msg: content
                        //});
                    }
                    else if (cur_username == toUser) {
                        var currentdate = new Date();
                        var datetime = currentdate.getHours() + ":"
                                    + currentdate.getMinutes() + ":"
                                    + currentdate.getSeconds();
                        appendHtml = '<div class="fbChatConvItem">';
                        appendHtml += '<div class="messages">';
                        appendHtml += '<div class="direction_ltr">';
                        appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                        appendHtml += content;
                        appendHtml += '</div></div></div>';
                        $("#" + chat_id).find(".conversation").append(appendHtml);
                        $("#" + chat_id + " .c-content").animate({ scrollTop: $("#" + chat_id + " .c-content").prop("scrollHeight") }, 'slow');
                        var userdata = {
                            cosoId: cosoId, from_user: fromUser, to_user: toUser,
                            from_fullname: fromFullName, to_fullname: toFullName,
                            msg: content
                        };
                        InsertChatContent($.emoticons.replace(content), toUser, fromUser, 0, cosoId, chat_id, "toUser", userdata);
                        //socket.emit('send chat by toUser', {
                        //    cosoId: cosoId, from_user: fromUser, to_user: toUser,
                        //    from_fullname: fromFullName, to_fullname: toFullName,
                        //    msg: content
                        //});
                    }
                }
            }
            $("#" + chat_id).find("input[class='c-input']").val("").focus();
        }
        function InsertChatContent(msg, from, to, group, coso, chat_id, usertype, userdata) {
            __ShowAjaxProcessing = false;
            $.ajax({
                type: "POST",
                url: '/Common/InsertChatContent',
                cache: false,
                data: {
                    msg: msg,
                    from: from,
                    to: to,
                    group: group,
                    coso: coso
                },
                success: function (data) {
                    if (usertype == "toUser") {
                        socket.emit('send chat by toUser', userdata);
                    }
                    else if (usertype == "fromUser") {
                        socket.emit('send chat by fromUser', userdata);
                    }
                    setTimeout(function () {
                        $("#" + chat_id).find("input[class='c-input']").val("").focus();
                    }, 300);
                }
            });
            __ShowAjaxProcessing = true;
        }

        //Chat Group
        function ShowAddUserToNewGroupChat(chat_id) {
            if ($("#" + chat_id).hasClass("active") == false) {
                $("#" + chat_id).addClass("active");
            }
            $("#" + chat_id + " .c-group").show();
            $("#" + chat_id + " .txtAddUser").focus();
        }
        function CallAutoCompleteUser(chat_id) {
            $("#" + chat_id + " .txtAddUser").autocomplete({
                source: userarray,
                select: function (event, ui) {
                    var index = ui.item.idx;
                    var value = ui.item.label;
                    var list_FullName = $("#" + chat_id + " .list-FullName").html();
                    if (list_FullName.length == 0) {
                        $("#" + chat_id + " .list-FullName").html(value);
                        $("#" + chat_id + " .list-UserName").val(usernamearray[index]);
                    }
                    else {
                        $("#" + chat_id + " .list-FullName").html(list_FullName + ", " + value);
                        $("#" + chat_id + " .list-UserName").val($("#" + chat_id + " .list-UserName").val() + ", " + usernamearray[index]);
                    }
                    //if (false !== self._trigger("select", event, { item: item })) {
                    //    $("#" + chat_id + " .txtAddUser").val("");
                    //    $("#" + chat_id + " .txtAddUser").focus();
                    //}
                },
            });
        }
        function AddUserToNewGroupChat(chat_id, fromUser, toUser, fromFullName, toFullName) {
            var user_adds = $("#" + chat_id + " .list-UserName").val();
            var fullname_adds = $("#" + chat_id + " .list-FullName").html();
            if (user_adds.length <= 0) {
                $("#" + chat_id + " .c-group").hide();
            }
            else {
                //emit to server add group chat
                var users = user_adds.split(',');
                var fullnames = fullname_adds.split(',');
                if (users.length > 0) {
                    var listUser = [];
                    if (cur_username == fromUser) {
                        listUser.push({ username: fromUser, fullname: fromFullName, isJoined: 1 });
                        listUser.push({ username: toUser, fullname: toFullName, isJoined: 0 });
                    }
                    else {
                        listUser.push({ username: fromUser, fullname: fromFullName, isJoined: 0 });
                        listUser.push({ username: toUser, fullname: toFullName, isJoined: 1 });
                    }
                    for (var i = 0; i < users.length; i++) {
                        if (users[i].trim().length > 0) {
                            listUser.push({ username: users[i].trim(), fullname: fullnames[i].trim(), isJoined: 0 });
                        }
                    }
                    // Call ajax lên server tạo mới nhóm chat
                    // Rồi trả về thông tin của nhóm chat để gửi lên server nodejs.
                    __ShowAjaxProcessing = false;
                    $.ajax({
                        type: "POST",
                        url: '/Common/InsertGroupChat',
                        cache: false,
                        data: {
                            cosoId: cosoId,
                            created_user: cur_username,
                            listUserName: user_adds + "," + fromUser + "," + toUser
                        },
                        success: function (groupInfo) {
                            $("#" + chat_id + " .c-group").hide();
                            $("#" + chat_id + " .list-UserName").val("");
                            $("#" + chat_id + " .list-FullName").html("");
                            socket.emit('create chat group', {
                                cosoId: cosoId,
                                created_user: cur_username,
                                current_UserName: cur_username,
                                listUser: listUser,
                                groupId: groupInfo.groupId,
                                groupChat_id: groupInfo.groupChat_id
                            });
                        }
                    });
                    __ShowAjaxProcessing = true;
                }
            }
        }

        //Mở cửa sổ chat nhóm
        socket.on('open window chatgroup for createdUser', function (data) {
            if (cur_username === data.createdUser) {
                //console.log(data.listUser);
                //Tạo và mở cửa sổ chat group
                var groupChat_id = data.groupChatId;
                //Thêm 1 cửa sổ chat
                __ShowAjaxProcessing = false;
                $.ajax({
                    type: "POST",
                    url: '/Common/ChatGroup',
                    cache: false,
                    data: {
                        cosoId: data.cosoId,
                        createdUser: data.createdUser,
                        groupId: data.groupId,
                        currentUserName: cur_username,
                        soCuaSoChat: soCuaSoChat,
                        reload: 0,
                        groupChat_id: groupChat_id,
                        //listUser: data.listUser
                    },
                    success: function (datachat) {
                        soCuaSoChat += 1;
                        $("#pnl-chat").append(datachat);
                        $("#" + groupChat_id).find("input[class='c-input']").focus();
                    }
                });
                __ShowAjaxProcessing = true;
            }
        });
        //Đóng cửa sổ chat nhóm
        function CloseGroupChatBox(groupChat_id, group_id) {
            //Emit lên server để xóa chat box này trong mảng Chats đi
            socket.emit('delete groupchat', { cosoId: cosoId, group_id: parseInt(group_id), username: cur_username });
            //Xóa box chat nhóm tại client
            $("#" + groupChat_id).remove();
            soCuaSoChat = 0;
            $("#pnl-chat .chat").each(function () {
                var right = 200;
                if (soCuaSoChat >= 1) {
                    right += (250 * soCuaSoChat) + (10 * soCuaSoChat);
                }
                $(this).css("right", right);
                soCuaSoChat++;
            });
        }
        function showBieuTuongToGroup(groupChat_id, group_id) {
            //alert(groupChat_id);
            if ($("#" + groupChat_id).hasClass("active") == false) {
                $("#" + groupChat_id).addClass("active");
            }
            $("#" + groupChat_id + " .overview").html($.emoticons.toString());
            $("#" + groupChat_id + " .overview").toggle();
            $("#" + groupChat_id + " .overview .emoticon").click(function () {
                $("#" + groupChat_id + " .c-input").val($.emoticons.replace($(this).html()));
                SendChatToGroup(groupChat_id, group_id);
                $("#" + groupChat_id + " .overview").hide();
            });
        }

        function ShowAddUserToNewGroupChatToMember(groupChat_id) {
            if ($("#" + groupChat_id).hasClass("active") == false) {
                $("#" + groupChat_id).addClass("active");
            }
            $("#" + groupChat_id + " .c-group-editname").hide();
            $("#" + groupChat_id + " .c-group").show();
            $("#" + groupChat_id + " .txtAddUser").focus();
        }

        function AddUserToNewGroupChatToMember(groupChat_id, group_id) {
            var user_adds = $("#" + groupChat_id + " .list-UserName").val();
            var fullname_adds = $("#" + groupChat_id + " .list-FullName").html();
            if (user_adds.length <= 0) {
                $("#" + groupChat_id + " .c-group").hide();
            }
            else {
                //emit to server add group chat
                var users = user_adds.split(',');
                var fullnames = fullname_adds.split(',');
                if (users.length > 0) {
                    var listUser = [];
                    for (var i = 0; i < users.length; i++) {
                        if (users[i].trim().length > 0) {
                            listUser.push({ username: users[i].trim(), fullname: fullnames[i].trim(), isJoined: 0 });
                        }
                    }
                    //Call ajax lên server để update thông tin nhóm chat
                    //Rồi trả về thông tin của nhóm chat để gửi lên server nodejs.
                    __ShowAjaxProcessing = false;
                    $.ajax({
                        type: "POST",
                        url: '/Common/UpdateGroupChat',
                        cache: false,
                        data: {
                            cosoId: cosoId,
                            group_id: group_id,
                            listUserName: user_adds
                        },
                        success: function (groupInfo) {
                            var user_added = groupInfo.user_added.split(',');
                            var _fullname_added = groupInfo.fullname_added.split(',');
                            var username_added = "";
                            var fullname_added = "";
                            var has_update = 0;
                            if (user_added.length > 0) {
                                var _listUserAdded = [];
                                for (var i = 0; i < user_added.length; i++) {
                                    if (user_added[i].trim().length > 0) {
                                        for (var j = 0; j < listUser.length; j++) {
                                            if (listUser[j].username === user_added[i]) {
                                                _listUserAdded.push(listUser[j]);
                                                username_added += user_added[i] + ", ";
                                                fullname_added += _fullname_added[i] + ", ";
                                                has_update = 1;
                                                break;
                                            }
                                        }
                                    }
                                }
                            }
                            $("#" + groupChat_id + " .c-group").hide();
                            $("#" + groupChat_id + " .list-UserName").val("");
                            $("#" + groupChat_id + " .list-FullName").html("");
                            if (has_update == 1) {
                                var content = "Đã thêm " + fullname_added + " vào nhóm";
                                var currentdate = new Date();
                                var appendHtml = "";
                                var datetime = currentdate.getHours() + ":"
                                            + currentdate.getMinutes() + ":"
                                            + currentdate.getSeconds();
                                appendHtml = '<div class="fbChatConvItem">';
                                appendHtml += '<div class="messages">';
                                appendHtml += '<div class="direction_ltr">';
                                appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                                appendHtml += '<p class="cl"><b><i>' + content + '</i></b></p>';
                                appendHtml += '</div></div></div>';
                                $("#" + groupChat_id).find(".conversation").append(appendHtml);
                                $("#" + groupChat_id + " .c-content").animate({ scrollTop: $("#" + groupChat_id + " .c-content").prop("scrollHeight") }, 'slow');
                                //Cập nhật lại title của Tên nhóm
                                var cur_title = $("#" + groupChat_id + " .c-groupname").attr("title");
                                $("#" + groupChat_id + " .c-groupname").attr("title", cur_title + ", " + fullname_added);
                                InsertChatGroupContent($.emoticons.replace(content), cur_username, group_id, cosoId, groupChat_id);
                                var dataEmit = {
                                    cosoId: cosoId,
                                    listUser: _listUserAdded,
                                    groupId: group_id,
                                    groupChat_id: groupChat_id,
                                    username_update: cur_username,
                                    fullname_update: cur_fullname
                                };
                                socket.emit('update chat group', dataEmit);
                            }
                            else {
                                notif({
                                    type: 'success',
                                    position: 'bottom',
                                    msg: user_adds + ' đã tham gia nhóm chat!',
                                });
                            }
                        }
                    });
                    __ShowAjaxProcessing = true;
                }
            }
        }
        //Hiển thị thông tin thêm thành viên vào nhóm chat
        socket.on('show info chatgroup update', function (data) {
            if (cosoId == data.cosoId && cur_username != data.username_update) {
                var content = data.msg;
                var currentdate = new Date();
                var appendHtml = "";
                var datetime = currentdate.getHours() + ":"
                            + currentdate.getMinutes() + ":"
                            + currentdate.getSeconds();
                appendHtml = '<div class="fbChatConvItem">';
                appendHtml += '<div class="messages">';
                appendHtml += '<div class="direction_ltr">';
                appendHtml += '<b class="st">' + data.fullname_update + '</b> <span class="s-date">' + datetime + '</span>';
                appendHtml += '<p><b><i>' + content + '</i></b></p>';
                appendHtml += '</div></div></div>';
                $("#" + data.groupChatId).find(".conversation").append(appendHtml);
                $("#" + data.groupChatId + " .c-content").animate({ scrollTop: $("#" + data.groupChatId + " .c-content").prop("scrollHeight") }, 'slow');
                //Cập nhật lại title của Tên nhóm
                var cur_title = $("#" + data.groupChatId + " .c-groupname").attr("title");
                $("#" + data.groupChatId + " .c-groupname").attr("title", cur_title + ", " + data.userAdded);
            }
        });
        //Hiển thị thông tin cập nhật tên nhóm chat
        socket.on('show info groupname update', function (data) {
            if (cosoId == data.cosoId && cur_username != data.username_update) {
                //Update lại HTML tên nhóm chat
                $("#" + data.groupChatId + " .c-groupname").html(data.groupName);
                var content = data.msg;
                var currentdate = new Date();
                var appendHtml = "";
                var datetime = currentdate.getHours() + ":"
                            + currentdate.getMinutes() + ":"
                            + currentdate.getSeconds();
                appendHtml = '<div class="fbChatConvItem">';
                appendHtml += '<div class="messages">';
                appendHtml += '<div class="direction_ltr">';
                appendHtml += '<b class="st">' + data.fullname_update + '</b> <span class="s-date">' + datetime + '</span>';
                appendHtml += '<p><b><i>' + content + '</i></b></p>';
                appendHtml += '</div></div></div>';
                $("#" + data.groupChatId).find(".conversation").append(appendHtml);
                $("#" + data.groupChatId + " .c-content").animate({ scrollTop: $("#" + data.groupChatId + " .c-content").prop("scrollHeight") }, 'slow');
            }
        });
        //Hiển thị thông tin thành viên rời khỏi nhóm chat
        socket.on('show info left join groupchat', function (data) {
            if (cosoId == data.cosoId && cur_username != data.username_update) {
                var content = data.msg;
                var currentdate = new Date();
                var appendHtml = "";
                var datetime = currentdate.getHours() + ":"
                            + currentdate.getMinutes() + ":"
                            + currentdate.getSeconds();
                appendHtml = '<div class="fbChatConvItem">';
                appendHtml += '<div class="messages">';
                appendHtml += '<div class="direction_ltr">';
                appendHtml += '<b class="st">' + data.fullname_update + '</b> <span class="s-date">' + datetime + '</span>';
                appendHtml += '<p><b><i>' + content + '</i></b></p>';
                appendHtml += '</div></div></div>';
                $("#" + data.groupChatId).find(".conversation").append(appendHtml);
                $("#" + data.groupChatId + " .c-content").animate({ scrollTop: $("#" + data.groupChatId + " .c-content").prop("scrollHeight") }, 'slow');

                //Cập nhật lại title của Tên nhóm
                var cur_title = $("#" + data.groupChatId + " .c-groupname").attr("title");
                $("#" + data.groupChatId + " .c-groupname").attr("title", cur_title.replace('' + data.fullname_update + '', ''));
            }
        });
        //Insert nội dung chat nhóm vào DB
        function InsertChatGroupContent(msg, from, group, coso, groupChat_id) {
            __ShowAjaxProcessing = false;
            $.ajax({
                type: "POST",
                url: '/Common/InsertChatGroupContent',
                cache: false,
                data: {
                    msg: msg,
                    from: from,
                    group: group,
                    coso: coso
                },
                success: function (data) {
                    setTimeout(function () {
                        $("#" + groupChat_id).find("input[class='c-input']").val("").focus();
                    }, 300);
                }
            });
            __ShowAjaxProcessing = true;
        }
        function UpdateChatGroupName(groupname, msg, from, group, coso, groupChat_id) {
            __ShowAjaxProcessing = false;
            $.ajax({
                type: "POST",
                url: '/Common/UpdateGroupName',
                cache: false,
                data: {
                    groupname: groupname,
                    msg: msg,
                    from: from,
                    group: group,
                    coso: coso
                },
                success: function (data) {
                    setTimeout(function () {
                        $("#" + groupChat_id).find("input[class='c-input']").val("").focus();
                    }, 300);
                }
            });
            __ShowAjaxProcessing = true;
        }
        function SendChatToGroup(groupChat_id, group_id) {
            var content = $("#" + groupChat_id).find("input[class='c-input']").val();
            var appendHtml = "";
            if (content.length > 0) {
                var currentdate = new Date();
                var datetime = currentdate.getHours() + ":"
                            + currentdate.getMinutes() + ":"
                            + currentdate.getSeconds();
                appendHtml = '<div class="fbChatConvItem">';
                appendHtml += '<div class="messages">';
                appendHtml += '<div class="direction_ltr">';
                appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                appendHtml += '<p class="cl">' + $.emoticons.replace(content) + '</p>';
                appendHtml += '</div></div></div>';
                $("#" + groupChat_id).find(".conversation").append(appendHtml);
                $("#" + groupChat_id + " .c-content").animate({ scrollTop: $("#" + groupChat_id + " .c-content").prop("scrollHeight") }, 'slow');
                InsertChatGroupContent($.emoticons.replace(content), cur_username, group_id, cosoId, groupChat_id);
                //Emit lên server để gửi thông tin chat cho người trong nhóm chat nhận
                socket.emit('send chat to group', {
                    cosoId: cosoId, from_user: cur_username,
                    from_fullname: cur_fullname,
                    msg: content,
                    groupChatId: groupChat_id,
                    groupId: group_id
                });
            }
            $("#" + groupChat_id).find("input[class='c-input']").val("").focus();
        }
        //show content chatgroup
        socket.on('show content chatgroup', function (data) {
            if (cosoId == data.cosoId && cur_username != data.username_sent) {
                //kiểm tra xem user có nằm trong danh sách được nhận tin nhắn không?
                var has_show = 0;
                var isJoined = 0;
                var _listUser = data.listUser;
                for (var j = 0; j < _listUser.length; j++) {
                    if (_listUser[j].username === cur_username) {
                        has_show = 1;
                        isJoined = _listUser[j].isJoined;
                        break;
                    }
                }
                var groupChat_id = data.groupChatId;
                //Nếu user được hiển thị tin nhắn chat
                if (has_show == 1) {
                    //Nếu user chưa join trong nhóm chat thì hiển thị cửa sổ chat
                    if (isJoined == 0) {
                        //Tạo và mở cửa sổ chat group
                        //Thêm 1 cửa sổ chat
                        __ShowAjaxProcessing = false;
                        $.ajax({
                            type: "POST",
                            url: '/Common/ChatGroup',
                            cache: false,
                            data: {
                                cosoId: data.cosoId,
                                createdUser: data.chatGroup.createdUser,
                                groupId: data.groupId,
                                currentUserName: cur_username,
                                soCuaSoChat: soCuaSoChat,
                                reload: 0,
                                groupChat_id: groupChat_id,
                                //listUser: data.listUser
                            },
                            success: function (datachat) {
                                soCuaSoChat += 1;
                                $("#pnl-chat").append(datachat);
                            }
                        });
                        __ShowAjaxProcessing = true;
                    }
                        //Nếu user đã join trong nhóm chat thì hiển thị tin nhắn
                    else if (isJoined == 1) {
                        if ($("#" + groupChat_id).hasClass("active") == false) {
                            $("#" + groupChat_id).addClass("active");
                        }
                        var content = data.msg;
                        var currentdate = new Date();
                        var appendHtml = "";
                        var datetime = currentdate.getHours() + ":"
                                    + currentdate.getMinutes() + ":"
                                    + currentdate.getSeconds();
                        appendHtml = '<div class="fbChatConvItem">';
                        appendHtml += '<div class="messages">';
                        appendHtml += '<div class="direction_ltr">';
                        appendHtml += '<b class="st">' + data.fullname_sent + '</b> <span class="s-date">' + datetime + '</span>';
                        appendHtml += '<p>' + $.emoticons.replace(content) + '</p>';
                        appendHtml += '</div></div></div>';
                        $("#" + data.groupChatId).find(".conversation").append(appendHtml);
                        $("#" + data.groupChatId + " .c-content").animate({ scrollTop: $("#" + data.groupChatId + " .c-content").prop("scrollHeight") }, 'slow');
                    }
                }
            }
        });

        function CallAutoCompleteUserToGroup(groupChat_id) {
            $("#" + groupChat_id + " .txtAddUser").autocomplete({
                source: userarray,
                select: function (event, ui) {
                    var index = ui.item.idx;
                    var value = ui.item.label;
                    var list_FullName = $("#" + groupChat_id + " .list-FullName").html();
                    if (list_FullName.length == 0) {
                        $("#" + groupChat_id + " .list-FullName").html(value);
                        $("#" + groupChat_id + " .list-UserName").val(usernamearray[index]);
                    }
                    else {
                        $("#" + groupChat_id + " .list-FullName").html(list_FullName + ", " + value);
                        $("#" + groupChat_id + " .list-UserName").val($("#" + groupChat_id + " .list-UserName").val() + ", " + usernamearray[index]);
                    }
                    //if (false !== self._trigger("select", event, { item: item })) {
                    //    $("#" + groupChat_id + " .txtAddUser").val("");
                    //    $("#" + groupChat_id + " .txtAddUser").focus();
                    //}
                },
            });
        }
        //sendFileAttachToGroup
        function sendFileAttachToGroup(groupChat_id) {
            $("#" + groupChat_id + " .fileAttach").click();
        }
        function sendFileAttachImageToGroup(groupChat_id) {
            $("#" + groupChat_id + " .fileAttachImage").click();
        }
        function SendChatFileToGroup(data, groupChat_id, group_id) {
            var OutFilePath = data.OutFilePath;
            var OutFileName = data.OutFileName;
            var OutFileExt = data.OutFileExt;
            var OutFileID = data.OutFileID;
            var content = "";
            var appendHtml = "";
            if (OutFileName.length > 0) {
                for (i = 0; i < OutFileName.length; i++) {
                    var fileExt = OutFileExt[i];
                    if (fileExt.match(/\.(jpg|jpeg|png|gif)$/)) {
                        content += '<p><a class="img" href="/common/downloadfile/' + OutFileID[i] + '"><img style="width: auto;max-width: 150px;" src="' + OutFilePath[i] + '"></a></p><br>';
                    }
                    else {
                        content += '<p class="cl c-hasfile"><a class="file ' + fileExt.replace(".", "") + '" href="/common/downloadfile/' + OutFileID[i] + '">' + OutFileName[i] + '</a></p><br>';
                    }
                }
                if (content.length > 0) {
                    var currentdate = new Date();
                    var datetime = currentdate.getHours() + ":"
                                + currentdate.getMinutes() + ":"
                                + currentdate.getSeconds();
                    appendHtml = '<div class="fbChatConvItem">';
                    appendHtml += '<div class="messages">';
                    appendHtml += '<div class="direction_ltr">';
                    appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                    appendHtml += content;
                    appendHtml += '</div></div></div>';
                    $("#" + groupChat_id).find(".conversation").append(appendHtml);
                    $("#" + groupChat_id + " .c-content").animate({ scrollTop: $("#" + groupChat_id + " .c-content").prop("scrollHeight") }, 'slow');
                    InsertChatGroupContent($.emoticons.replace(content), cur_username, group_id, cosoId, groupChat_id);
                    //Emit lên server để gửi thông tin chat cho người nhận
                    socket.emit('send chat to group', {
                        cosoId: cosoId, from_user: cur_username,
                        from_fullname: cur_fullname,
                        msg: content,
                        groupChatId: groupChat_id,
                        groupId: group_id
                    });
                }
            }
            $("#" + groupChat_id).find("input[class='c-input']").val("").focus();
        }
        function ShowConfigGroupChat(groupChat_id) {
            $("#" + groupChat_id + " .c-config").toggle();
            if ($("#" + groupChat_id).hasClass("active") == false) {
                $("#" + groupChat_id).addClass("active");
            }
        }
        function ShowEditNameGroupChat(groupChat_id) {
            $("#" + groupChat_id + " .c-config").hide();
            $("#" + groupChat_id + " .c-group").hide();
            $("#" + groupChat_id + " .c-group-editname").show();
            $("#" + groupChat_id + " .c-group-editname .txtGroupName").focus();
        }

        function SaveGroupName(groupChat_id, group_id) {
            var groupname = $("#" + groupChat_id + " .c-group-editname .txtGroupName").val().trim();
            if (groupname.length > 0) {
                var content = "Đổi tên nhóm thành: " + groupname;
                var currentdate = new Date();
                var appendHtml = "";
                var datetime = currentdate.getHours() + ":"
                            + currentdate.getMinutes() + ":"
                            + currentdate.getSeconds();
                appendHtml = '<div class="fbChatConvItem">';
                appendHtml += '<div class="messages">';
                appendHtml += '<div class="direction_ltr">';
                appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                appendHtml += '<p class="cl"><b><i>' + content + '</i></b></p>';
                appendHtml += '</div></div></div>';
                $("#" + groupChat_id).find(".conversation").append(appendHtml);
                $("#" + groupChat_id + " .c-content").animate({ scrollTop: $("#" + groupChat_id + " .c-content").prop("scrollHeight") }, 'slow');
                UpdateChatGroupName(groupname, $.emoticons.replace(content), cur_username, group_id, cosoId, groupChat_id);
                //Emit to server
                socket.emit('update groupname', {
                    cosoId: cosoId,
                    userUpdate: cur_username,
                    fullnameUpdate: cur_fullname,
                    groupName: groupname,
                    groupChatId: groupChat_id,
                    groupId: group_id
                });
                //Update lại HTML tên nhóm chat
                $("#" + groupChat_id + " .c-groupname").html(groupname);
                $("#" + groupChat_id + " .c-group-editname").val("");
            }
            $("#" + groupChat_id + " .c-group-editname").hide();
        }

        function LeftJoinGroupChat(groupChat_id, group_id) {
            //alert("Rời khỏi nhóm chat: " + groupChat_id);
            $.confirm({
                'title': 'Xác nhận rời khỏi nhóm chat',
                'message': 'Bạn chắc chắn muốn rời khỏi nhóm chat này không?',
                'buttons': {
                    'Đồng ý': {
                        'class': 'btn-confirm-yes',
                        'action': function () {
                            var content = "Rời khỏi nhóm chat";
                            var currentdate = new Date();
                            var appendHtml = "";
                            var datetime = currentdate.getHours() + ":"
                                        + currentdate.getMinutes() + ":"
                                        + currentdate.getSeconds();
                            appendHtml = '<div class="fbChatConvItem">';
                            appendHtml += '<div class="messages">';
                            appendHtml += '<div class="direction_ltr">';
                            appendHtml += '<b class="cl">Bạn</b> <span class="s-date">' + datetime + '</span>';
                            appendHtml += '<p class="cl"><b><i>' + content + '</i></b></p>';
                            appendHtml += '</div></div></div>';
                            $("#" + groupChat_id).find(".conversation").append(appendHtml);
                            $("#" + groupChat_id + " .c-content").animate({ scrollTop: $("#" + groupChat_id + " .c-content").prop("scrollHeight") }, 'slow');
                            __ShowAjaxProcessing = false;
                            $.ajax({
                                url: '@Url.Action("LeftGroupChat", "Common")',
                                type: 'post',
                                cache: false,
                                data: {
                                    coso: cosoId,
                                    group_id: group_id,
                                    username: cur_username
                                },
                                success: function (data) {
                                    //Emit lên server để thông báo cho các thành viên khác biết
                                    socket.emit('user left join groupchat', {
                                        cosoId: cosoId,
                                        userUpdate: cur_username,
                                        fullnameUpdate: cur_fullname,
                                        groupChatId: groupChat_id,
                                        groupId: group_id
                                    });
                                    $("#" + groupChat_id).remove();
                                    soCuaSoChat = 0;
                                    $("#pnl-chat .chat").each(function () {
                                        var right = 200;
                                        if (soCuaSoChat >= 1) {
                                            right += (250 * soCuaSoChat) + (10 * soCuaSoChat);
                                        }
                                        $(this).css("right", right);
                                        soCuaSoChat++;
                                    });
                                },
                                error: function (xhr) {
                                    alert(xhr.responseText);
                                }
                            });
                            __ShowAjaxProcessing = true;
                        }
                    },
                    'Hủy': {
                        'class': 'btn-info',
                        'action': function () { }
                    }
                }
            });
        }
        //End chat group
        //Chat Panel
        function LoadChatBox(i, fromUser, toUser, fromFullName, toFullName) {
            itemInListChatPanel = i;
            var fromUser = '@user.Username';
            var fullName = '@user.Fullname';
            //Tạo 1 cửa sổ chat, lưu trên node server
            socket.emit('create chat to user', {
                cosoId: cosoId, from_user: fromUser,
                to_user: toUser, from_fullname: fullName, to_fullname: toFullName,
                current_UserName: cur_username
            });
        }

        function showBieuTuongChatPanel(chat_id, fromUser, toUser, fromFullName, toFullName) {
            //alert(chat_id);
            if ($("#" + chat_id).hasClass("active") == false) {
                $("#" + chat_id).addClass("active");
            }
            $("#" + chat_id + " .overview").html($.emoticons.toString());
            $("#" + chat_id + " .overview").toggle();
            $("#" + chat_id + " .overview .emoticon").click(function () {
                $("#" + chat_id + " .c-input").val($.emoticons.replace($(this).html()));
                SendChatPanel(fromUser, toUser, fromFullName, toFullName, chat_id);
                $("#" + chat_id + " .overview").hide();
            });
        }
        //End Chat Panel
        //Notification

        function LoadTinNhan() {
            $.ajax({
                url: '@Url.Action("ShowTinNhan", "Common")',
                type: 'post',
                success: function (data) {
                    $("#pnl-notification").html(data);
                },
                error: function (xhr) {
                    alert(xhr.responseText);
                }
            });
        }

        function callNotificationdata() {
            var settings = {
                trigger: 'click',
                title: '<span style="color:#35498e;font-weight:none">Thông báo mới</span>',
                width: 300,
                height: 350,
                multi: true,
                closeable: true,
                style: 'pos-custom',
                delay: 300,
                padding: true
            };
            var asyncSettings = {
                cache: false,
                url: '@Url.Action("ShowTinNhan", "Common")',
                type: 'async',
                content: function (data) {
                    return data;
                }
            };
            $('a.show-pop-notification').webuiPopover('destroy').webuiPopover($.extend({}, settings, asyncSettings));
        }

        //End



        //show notification
        socket.on('show notification', function (data) {
            alert("notification");
        });
    </script>
    <script type="text/javascript">
        var tday = new Array("Chủ nhật", "Thứ hai", "Thứ ba", "Thứ tư", "Thứ năm", "Thứ sáu", "Thứ bảy");
        function GetClock() {
            var d = new Date();
            var nday = d.getDay(), nmonth = d.getMonth(), ndate = d.getDate(), nyear = d.getYear();
            if (nyear < 1000) nyear += 1900;
            var d = new Date();
            var nhour = d.getHours(), nmin = d.getMinutes(), nsec = d.getSeconds(), ap;
            var _nmonth = parseInt(nmonth) + 1;
            //if (nhour == 0) { ap = " AM"; nhour = 12; }
            //else if (nhour < 12) { ap = " AM"; }
            //else if (nhour == 12) { ap = " PM"; }
            //else if (nhour > 12) { ap = " PM"; nhour -= 12; }

            if (nmin <= 9) nmin = "0" + nmin;
            if (nsec <= 9) nsec = "0" + nsec;
            document.getElementById('servertime').innerHTML = "" + tday[nday] + ", " + /*tmonth[nmonth]*/ ndate + "/" + _nmonth + "/" + nyear + " | " + nhour + ":" + nmin + ":" + nsec /*+ ap*/ + "";
        }

        window.onload = function () {
            GetClock();
            setInterval(GetClock, 1000);
        }
    </script>

    <style>
        .webui-popover-pos-custom {
            top: 95px !important;
        }
    </style>
</body>
</html>
