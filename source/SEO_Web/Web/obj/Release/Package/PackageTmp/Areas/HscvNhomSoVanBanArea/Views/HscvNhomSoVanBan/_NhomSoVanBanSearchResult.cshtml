@using Web.FwCore;
@using Web.Areas.HscvNhomSoVanBanArea.Models;
@using Business.CommonBusiness;
@using System.Text;
@using Model.eAita;
@{
    List<HscvNhomSoVanBanBO> listNhomSoVanBan = new List<HscvNhomSoVanBanBO>();
    if (ViewBag.Search == NhomSoVanBanConstant.IS_NOT_SEARCH)
    {
        listNhomSoVanBan = (List<HscvNhomSoVanBanBO>)SessionManager.GetValue("ListNhomSoVanBan");
    }
    else
    {
        listNhomSoVanBan = (List<HscvNhomSoVanBanBO>)SessionManager.GetValue("ListNhomSoVanBanSearch");
    }
    var grid = new WebGrid(listNhomSoVanBan, rowsPerPage: 10, canPage: true, canSort: false, ajaxUpdateContainerId: "grid", selectionFieldName: "selectedRow");
}
@Html.AntiForgeryToken()
@if (listNhomSoVanBan != null && listNhomSoVanBan.Count > 0)
{
    <div id="grid">
        <div id="HeaderGrid">
            <div>
                <label id="lblBenhChuanDoan">@(listNhomSoVanBan.Count) kết quả</label>
            </div>
        </div>
        @grid.GetHtml(
                tableStyle: "webGrid",
                headerStyle: "head",
                alternatingRowStyle: "alt",
                selectedRowStyle: "select",
                 mode: WebGridPagerModes.All | WebGridPagerModes.FirstLast | WebGridPagerModes.NextPrevious | WebGridPagerModes.Numeric,
                columns: grid.Columns(
                grid.Column("STT", format: item => item.WebGrid.Rows.IndexOf(item) + 1 + Math.Round(Convert.ToDouble(grid.TotalRowCount / grid.PageCount) / grid.RowsPerPage) * grid.RowsPerPage * grid.PageIndex, style: "center"),
                grid.Column("NHOMSOVANBAN", "Nhóm sổ văn bản"),
                grid.Column("TENLOAIVANBAN", "Loại hồ sơ"),
                grid.Column(format: (item) =>
                 {
                     return new MvcHtmlString((item.TRANGTHAI == true ? "<span class='green'>Được sử dụng</span>" : "<span class='red'>Không được sử dụng</span>"));
                 }, header: "Trạng Thái"),
                grid.Column(format: (item) =>
                {
                    return new MvcHtmlString("<a href='javascript:void(0)' onclick='EditNhomSoVanBan(" + item.ID + ")' class='btnEdit' title = 'Chỉnh sửa'></a>");
                }, header: "Sửa"),
                grid.Column(format: (item) =>
                {
                    return new MvcHtmlString("<a href='javascript:void(0)' onclick='RemoveNhomSoVanBan(" + item.ID + ")' class='btnDelete' title = 'Xóa'></a>");
                }, header: "Xóa")))
    </div>
}
else
{
    <div id="Empty" class="red">
        không có kết quả
    </div>
}
<style type="text/css">
    .green{
        color:#008000;
    }
    .red {
        color: red;
    }

    #grid > #HeaderGrid > div {
        margin: 0 0 10px 10px;
    }

    #lblBenhChuanDoan {
        margin-top: 90px;
        margin-left: 5px;
        font-weight: bold;
    }

    .webGrid {
        margin: 0;
        border-collapse: collapse;
        width: 100%;
        background-color: #B4CFC3;
    }

    .center {
        text-align: center;
    }

    .btnEdit {
        background: url('/Content/Images/Edit.png') no-repeat;
        display: block;
        width: 16px;
        height: 16px;
        margin: 0 auto;
    }

    .btnDelete {
        background: url('/Content/Images/Delete.png') no-repeat;
        display: block;
        width: 16px;
        height: 16px;
        margin: 0 auto;
    }

    .btnAdd {
        display: block;
        width: 200px;
        height: 26px;
        margin-left: 23px;
        margin-top: -23px;
        text-decoration: none;
        font-weight: 700;
        color: black !important;
    }

    .webGrid tr td {
        cursor: pointer;
    }

    .head th:first-child {
        width: 10px;
    }

    .webGrid tbody tr td:nth-child(2) {
        width: 250px;
    }
</style>
<div class="modal fade" id="CreateNhomSoVanBan" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"></div>
<div class="modal fade" id="PrepareNhomSoVanBan" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"></div>
<script type="text/javascript">
    $('.grid tbody').on('hover', function () {
        $(this).toggleClass('clickable');
    });

    function OnCreate() {
        $.ajax({
            url: '@Url.Action("NhomSoVanBanCreateForm", "HscvNhomSoVanBan")',
            type: 'post',
            cache: false,
            data: {},
            success: function (data) {
                $("#CreateNhomSoVanBan").html(data);
                $("#CreateNhomSoVanBan").modal("show");
            },
            error: function (xhr) {
                CommonJS.alert(xhr.responseText);
            }
        });

    }
    function EditNhomSoVanBan(ID) {
        $.ajax({
            url: '@Url.Action("NhomSoVanBanEditForm", "HscvNhomSoVanBan")',
            type: 'post',
            cache: false,
            data: {
                ID: ID
            },
            success: function (data) {
                $("#PrepareNhomSoVanBan").html(data);
                $("#PrepareNhomSoVanBan").modal("show");
            },
            error: function (xhr) {
                CommonJS.alert(xhr.responseText);
            }
        });
    }
    function RemoveNhomSoVanBan(ID) {
        $.confirm({
            'title': 'Xác nhận xóa',
            'message': 'Bạn có chắc chắn muốn xóa nhóm sổ văn bản này?',
            'buttons': {
                'Xóa': {
                    'class': 'btn-confirm-yes',
                    'action': function () {
                        $.ajax({
                            url: '@Url.Action("RemoveNhomSoVanBan", "HscvNhomSoVanBan")',
                            type: 'post',
                            cache: false,
                            data: { ID: ID },
                            success: function (data) {
                                notif({
                                    type: 'success',
                                    position: 'bottom',
                                    msg: 'Xóa nhóm sổ văn bản thành công!',
                                });
                                reloadGrid();
                            },
                            error: function (err) {
                                CommonJS.alert(err.responseText);
                            }
                        });
                    }
                },
                'Không xóa': {
                    'class': 'btn-info',
                    'action': function () { } // Nothing to do in this case. You can as well omit the action property.
                }
            }
        });
    }

</script>