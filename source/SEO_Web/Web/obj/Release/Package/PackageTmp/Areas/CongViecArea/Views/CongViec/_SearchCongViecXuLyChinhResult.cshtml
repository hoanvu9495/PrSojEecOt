@using Web.FwCore;
@using Business.CommonBusiness;
@using Web.Areas.MarkItemArea.Models;
@using Web.Common;
@{
    MarkItemViewModel mark_model = new MarkItemViewModel();
    mark_model.ITEM_TYPE = LOAITAILIEU.CONGVIEC;
    mark_model.RELOAD_FUNCTION = "reloadGrid";
    List<CongViecBO> lstCongViec = new List<CongViecBO>();

    string CheckSearch = ViewData["SearchXuLyChinh"].ToString();
    if (CheckSearch == "0")
    {
        lstCongViec = (List<CongViecBO>)SessionManager.GetValue("ListCongViecXuLyChinh");
    }
    if (CheckSearch == "1")
    {
        lstCongViec = (List<CongViecBO>)SessionManager.GetValue("ListCongViecXuLyChinhSearch");
    }

    var grid = new WebGrid(lstCongViec,
                          rowsPerPage: 10,
                          canPage: true,
                          canSort: true,
                          ajaxUpdateContainerId: "grid",
                           selectionFieldName: "selectedRow",
                           ajaxUpdateCallback: "searchSuccess"
                          );
}
<style>
    .dropdown-toggle{
        padding-left:24px;
    }
    .btnEdit {
        background: url('/Content/Images/Edit.png') no-repeat;
        display: block;
        width: 16px;
        height: 16px;
        margin: 0 auto;
    }

    .webGrid {
        margin: 0px;
        border-collapse: collapse;
        width: 100%;
        background-color: #B4CFC3;
    }

    .btnDelete {
        background: url('/Content/Images/Delete.png') no-repeat;
        display: block;
        width: 16px;
        height: 16px;
        margin: 0 auto;
    }

    .btnAdd {
        display: block;
        width: 160px;
        height: 26px;
        margin-left: 35px;
        margin-top: -23px;
        text-decoration: none;
        font-weight: 700;
        color: black !important;
    }

    .center {
        text-align: center;
    }
    .lbl-trichyeu a{
        float: left;
        text-align: left;
    }
    .lbl-time{
        width:100px;
    }
    .lbl-tiendo{
        width:30px;
    }
</style>

@Html.AntiForgeryToken()
<div id="grid">
    <h3 class="group-tittle" style="margin-bottom:10px;">
        Danh sách Công việc Xử lý chính (@(lstCongViec == null ? "0" : lstCongViec.Count.ToString()))
    </h3>
    @grid.GetHtml(
                tableStyle: "webGrid",
                headerStyle: "head",
                alternatingRowStyle: "alt",
                selectedRowStyle: "select",
                 mode: WebGridPagerModes.All | WebGridPagerModes.FirstLast | WebGridPagerModes.NextPrevious | WebGridPagerModes.Numeric,
                columns: grid.Columns(
                //grid.Column(format: item => item.WebGrid.Rows.IndexOf(item) + 1 + Math.Round(Convert.ToDouble(grid.TotalRowCount / grid.PageCount) / grid.RowsPerPage) * grid.RowsPerPage * grid.PageIndex, style: "center"),
                grid.Column(format: (item) => new MvcHtmlString(string.Format("<input class='global_checkbox " + ((item.IS_READ == true) ? "is_read" : "is_unread") + "' type='checkbox' name='ids' value='" + item.ID + "'>"))),
                grid.Column(format: (item) => new MvcHtmlString(string.Format("<span style='cursor:pointer' onclick=\"javascript:singleMarkItem(" + item.ID + ",'" + item.IS_FAVORITE + "'," + LOAITAILIEU.CONGVIEC + ",'" + LOAITAILIEU.FAVORITE + "')\" class='" + ((item.IS_FAVORITE == true) ? "favorite" : "notset_favorite") + "' ></span>"))),
                grid.Column(format: (item) => new MvcHtmlString(string.Format("<span style='cursor:pointer' onclick=\"javascript:singleMarkItem(" + item.ID + ",'" + item.IS_IMPORTANT + "'," + LOAITAILIEU.CONGVIEC + ",'" + LOAITAILIEU.IMPORTANT + "')\" class='" + ((item.IS_IMPORTANT == true) ? "important" : "notset_important") + "' ></span>"))),
                grid.Column(format: (item) => new MvcHtmlString(string.Format((item.HAS_FILE == true) ? "<span title='Có tệp đính kèm' class='btnAttFile'></span>" : ""))),
                grid.Column("NGUOIGIAOVIEC", format: (item) => new MvcHtmlString(item.NGUOIGIAOVIEC != null ? bool.Parse(item.IS_READ.ToString()) == false ? ("<b>" + item.NGUOIGIAOVIEC + "</b>") : item.NGUOIGIAOVIEC : ""), header: "Người giao việc"),
                grid.Column("TENCONGVIEC", format: (item) =>
                {
                    string tencongviec = string.Format(
                                                        "<a class='job-name' href='/congviecarea/congviec/detail/" + item.ID + "' title = 'Xem chi tiết'>" + (bool.Parse(item.IS_READ.ToString()) == false ? ("<b>" + item.TENCONGVIEC + "</b>") : item.TENCONGVIEC) + "</a>");
                    if(!string.IsNullOrEmpty(item.SOVANBANDEN))
                    {
                        tencongviec +="<p style='float:left;width:100%;margin:0px;'><a title='Văn bản đến' href='VanBanDenArea/VanBanDen/ViewDetail/" +item.VANBANDEN_ID + "'><img src = '/Content/Images/vb_den.png'/>" + item .SOVANBANDEN + "</a></p>";
                    }
                    if (!string.IsNullOrEmpty(item.SOVANBANDI))
                    {
                        tencongviec += "<p style='float:left;width:100%;margin:0px;'><a title='Văn bản đi' href='/vanbandiarea/vanbandi/detail/" + item.VANBANDI_ID + "'><img src = '/Content/Images/vb_di.png'/>" + item.SOVANBANDI + "</a></p>";
                    }
                    return new MvcHtmlString(tencongviec);
                }, header: "Công việc", style: "lbl-trichyeu"),
                grid.Column(format: (item) =>
                {
                    var nguoixuly = "";
                    if (item.ListNguoiXuLyChinh != null && item.ListNguoiXuLyChinh.Count > 0)
                    {
                        nguoixuly += "<img onclick='javascript:ShowNguoiXuLyChinh(" + item.ID + ");' class='job-img job-xlc' data-id='" + item.ID + "' title='Người xử lý chính' src = '/Content/Images/job_worker.png'/><p id='xlc_content_" + item.ID + "' class='job-xcl job-content job_worker' data-id='" + item.ID + "'><b style='font-weight:bold'>Người xử lý chính</b><br/><span>";
                        var count = 1;
                        foreach (var nxl in item.ListNguoiXuLyChinh)
                        {
                            if (count == item.ListNguoiXuLyChinh.Count)
                            {
                                if (ViewBag.CurrentUserName == nxl.UserName)
                                {
                                    nguoixuly += "<b>" + nxl.FullName + "</b></span></p>";
                                }
                                else
                                {
                                    nguoixuly += "<a href=\"javascript:chatToUserFromJob('" + nxl.UserName + "','" + nxl.FullName + "')\">" + nxl.FullName + "</a></span></p>";
                                }
                            }
                            else
                            {
                                if (ViewBag.CurrentUserName == nxl.UserName)
                                {
                                    nguoixuly += "<b>" + nxl.FullName + ",</b>";
                                }
                                else
                                {
                                    nguoixuly += "<a href=\"javascript:chatToUserFromJob('" + nxl.UserName + "','" + nxl.FullName + "')\">" + nxl.FullName + ",</a>";
                                }
                            }
                            count++;
                        }
                    }
                    if (item.ListNguoiThamGiaXuLy != null && item.ListNguoiThamGiaXuLy.Count > 0)
                    {
                        nguoixuly += "<img onclick='javascript:ShowNguoiThamGiaXuLy(" + item.ID + ");' class='job-img job-thamgia' data-id='" + item.ID + "' title='Người tham gia xử lý' src = '/Content/Images/job_worker_join.png'/><p id='thamgia_content_" + item.ID + "' class='job-xcl job-content job_worker_join' data-id='" + item.ID + "'><b style='font-weight:bold'>Người tham gia xử lý</b><br/><span>";
                        var count = 1;
                        foreach (var nxl in item.ListNguoiThamGiaXuLy)
                        {
                            if (count == item.ListNguoiThamGiaXuLy.Count)
                            {
                                if (ViewBag.CurrentUserName == nxl.UserName)
                                {
                                    nguoixuly += "<b>" + nxl.FullName + "</b></span></p>";
                                }
                                else
                                {
                                    nguoixuly += "<a href=\"javascript:chatToUserFromJob('" + nxl.UserName + "','" + nxl.FullName + "')\">" + nxl.FullName + "</a></span></p>";
                                }
                            }
                            else
                            {
                                if (ViewBag.CurrentUserName == nxl.UserName)
                                {
                                    nguoixuly += "<b>" + nxl.FullName + ",</b>";
                                }
                                else
                                {
                                    nguoixuly += "<a href=\"javascript:chatToUserFromJob('" + nxl.UserName + "','" + nxl.FullName + "')\">" + nxl.FullName + ",</a>";
                                }
                            }
                            count++;
                        }
                    }
                    if (item.ListNguoiTheoDoi != null && item.ListNguoiTheoDoi.Count > 0)
                    {
                        nguoixuly += "<img onclick='javascript:ShowNguoiTheoDoi(" + item.ID + ");' class='job-img job-theodoi' data-id='" + item.ID + "' title='Người theo dõi công việc' src = '/Content/Images/job_worker_folow.png'/><p id='theodoi_content_" + item.ID + "'  class='job-xcl job-content job_worker_folow' data-id='" + item.ID + "'><b style='font-weight:bold'>Người theo dõi công việc</b><br/><span>";
                        var count = 1;
                        foreach (var nxl in item.ListNguoiTheoDoi)
                        {
                            if (count == item.ListNguoiTheoDoi.Count)
                            {
                                if (ViewBag.CurrentUserName == nxl.UserName)
                                {
                                    nguoixuly += "<b>" + nxl.FullName + "</b></span></p>";
                                }
                                else
                                {
                                    nguoixuly += "<a href=\"javascript:chatToUserFromJob('" + nxl.UserName + "','" + nxl.FullName + "')\">" + nxl.FullName + "</a></span></p>";
                                }
                            }
                            else
                            {
                                if (ViewBag.CurrentUserName == nxl.UserName)
                                {
                                    nguoixuly += "<b>" + nxl.FullName + ",</b>";
                                }
                                else
                                {
                                    nguoixuly += "<a href=\"javascript:chatToUserFromJob('" + nxl.UserName + "','" + nxl.FullName + "')\">" + nxl.FullName + ",</a>";
                                }
                            }
                            count++;
                        }
                    }
                    return new MvcHtmlString(nguoixuly);
                }
                , header: "Người xử lý", style: "c-xuly"),
                grid.Column("PHANTRAMHOANTHANH", format: (item) => new MvcHtmlString(item.PHANTRAMHOANTHANH != null ? bool.Parse(item.IS_READ.ToString()) == false ? ("<b>" + item.PHANTRAMHOANTHANH + "%</b>") : item.PHANTRAMHOANTHANH + "%" : "0%"), header: "%", style: "lbl-tiendo"),
                grid.Column("NGAYBATDAU", format: (item) => new MvcHtmlString(item.NGAYBATDAU != null ? bool.Parse(item.IS_READ.ToString()) == false ? ("<b>" + string.Format("{0:dd/MM/yyyy}", item.NGAYBATDAU) + "</b>") : string.Format("{0:dd/MM/yyyy}", item.NGAYBATDAU) : ""), header: "Bắt đầu"),
                grid.Column("HANKETTHUC", format: (item) =>
                {
                    var hanketthuc = item.HANKETTHUC != null ? bool.Parse(item.IS_READ.ToString()) == false ? ("<b>" + string.Format("{0:dd/MM/yyyy}", item.HANKETTHUC) + "</b>") : string.Format("{0:dd/MM/yyyy}", item.HANKETTHUC) : "";
                    return new MvcHtmlString(hanketthuc);
                }
                , header: "Kết thúc"),
                grid.Column(format: (item) =>
                {
                    if (item.NGAYHOANTHANH == null)
                    {
                        var hanketthuc = "";
                        var totalday = (DateTime.Parse(item.HANKETTHUC.ToString()) - DateTime.Now).TotalDays;
                        if (totalday > 0)
                        {
                            hanketthuc += "<p style='float:left;width:100%;margin:0px;'>Còn " + Math.Round(totalday) + " ngày</p>";
                        }
                        else
                        {
                            hanketthuc += "<p style='float:left;width:100%;margin:0px;color:red;'>Quá " + Math.Round(totalday * (-1)) + " ngày</p>";
                        }
                        if (bool.Parse(item.IS_READ.ToString()) == false)
                        {
                            hanketthuc = "<b>" + hanketthuc + "</b>";
                        }

                        return new MvcHtmlString(hanketthuc);
                    }
                    return new MvcHtmlString("");
                }
                , header: "Thời gian", style: "lbl-time"),
                grid.Column("DOUUTIEN", format: (item) => new MvcHtmlString(item.DOUUTIEN != null ? string.Format((bool.Parse(item.IS_READ.ToString()) == false ? ("<b style='color:" + item.DOUUTIEN_CSSCOLOR + "'>" + item.DOUUTIEN + "</b>") : ("<label style='color:" + item.DOUUTIEN_CSSCOLOR + "'>" + item.DOUUTIEN + "</label>"))) : ""), header: "Mức độ"),
                grid.Column("TRANGTHAI", format: (item) => new MvcHtmlString(item.TRANGTHAI != null ? string.Format((bool.Parse(item.IS_READ.ToString()) == false ? ("<b style='color:"+item.TRANGTHAI_CSSCOLOR +"'>" + item.TRANGTHAI + "</b>") : ("<label style='color:" + item.TRANGTHAI_CSSCOLOR + "'>" + item.TRANGTHAI + "</label>"))) : ""), header: "Trạng thái")
                //grid.Column("TRANGTHAI_XULY", format: (item) => (item.IS_READ == false) ? new MvcHtmlString(string.Format("<span style='font-weight:bold'>" + item.TRANGTHAI_XULY + "</span>")) : item.TRANGTHAI_XULY, header: "Trạng thái xử lý"),
                //grid.Column(format: (item) => new MvcHtmlString(string.Format(
                //        "<a href='/congviecarea/congviec/detail/" + item.ID + "' class='btnView' title = 'Xem chi tiết'></a>")), header: "Xem"),
                //grid.Column(format: (item) => new MvcHtmlString(string.Format(
                //        "<a href='/congviecarea/congviec/edit/" + item.ID + "' class='btnEdit' title = 'Chỉnh sửa'></a>")), header: "Sửa"),
                //grid.Column(format: (item) => new MvcHtmlString(string.Format(
                //"<a href='javascript:void(0)' onclick='DeleteCongViec(" + item.ID + ")' class='btnDelete' title = 'Xóa'></a>")), header: "Xóa")
                )
    )
    @if (lstCongViec.Count == 0)
    {
        <div id="Empty" style="color: red;">
            Không có công việc nào
        </div>
    }
</div>