@using Web.Models;
@model VanBanLienQuanModel
<style type="text/css">
    .no-result{
        color:rgb(221,90,67);
        text-align:center;
        text-transform:uppercase;
        font-weight:bold;
        font-size:14px;
    }
    .state-icon {
        left: -5px;
    }

    .list-group-item-primary {
        color: rgb(255, 255, 255);
        background-color: rgb(66, 139, 202);
    }

    /* DEMO ONLY - REMOVES UNWANTED MARGIN */
    .well .list-group {
        margin-bottom: 0;
    }

    #block--table-vanbanlienquan {
        margin-top: 5px;
    }

        #block--table-vanbanlienquan > .well {
            max-height: 165px;
            overflow: auto;
        }
        #block--table-vanbanlienquan > .well .checked-list-box li{
            width:100%!important;
        }
</style>
<div class="col-xs-12" id="block--table-vanbanlienquan">
    <div class="well">
        <ul class="list-group checked-list-box">
            @if (Model.IS_VANBANDEN)
            {
                if (Model.ListVanBanDen != null && Model.ListVanBanDen.Count > 0)
                {
                    foreach (var item in Model.ListVanBanDen)
                    {
                        <li class="list-group-item li-van-ban-lien-quan">
                            @item.SOKYHIEU
                            <input type="checkbox" class="hidden check-box-van-ban-lien-quan" value="@item.ID" />
                            <input type="hidden" class="hidden input--trichyeu" value="@item.TRICHYEU" />
                            <input type="hidden" class="hidden input--sohieu" value="@item.SOKYHIEU" />
                        </li>
                    }
                }
                else
                {
                    <li class="no-result">
                        Không có kết quả !
                    </li>
                }
            }
            else
            {
                if (Model.ListVanBanDi != null && Model.ListVanBanDi.Count > 0)
                {

                    foreach (var item in Model.ListVanBanDi)
                    {
                        <li class="list-group-item li-van-ban-lien-quan">
                            @item.SOHIEU
                            <input type="checkbox" class="hidden check-box-van-ban-lien-quan" value="@item.ID" />
                            <input type="hidden" class="hidden input--trichyeu" value="@item.TRICHYEU" />
                            <input type="hidden" class="hidden input--sohieu" value="@item.SOHIEU" />
                        </li>
                    }
                }
                else
                {
                    <li class="no-result">
                        Không có kết quả !
                    </li>
                }
            }
        </ul>
    </div>
</div>
<script type="text/javascript">
    //$(function () {
        $('.list-group.checked-list-box .list-group-item').each(function () {
            //Setting plugin
            var $widget = $(this),
                $checkbox = $('<input type="checkbox" class="hidden" />'),
                color = ($widget.data('color') ? $widget.data('color') : "primary"),
                style = ($widget.data('style') == "button" ? "btn-" : "list-group-item-"),
                settings = {
                    on: {
                        icon: 'glyphicon glyphicon-check'
                    },
                    off: {
                        icon: 'glyphicon glyphicon-unchecked'
                    }
                };
            $widget.css('cursor', 'pointer');
            $widget.append($checkbox);
            //Event handlers
            $widget.on('click', function () {
                $checkbox.prop('checked', !$checkbox.is(':checked'));
                $checkbox.triggerHandler('change');
                updateDisplay();
            });
            $checkbox.on('change', function () {
                updateDisplay();
            });

            //// Actions
            function updateDisplay() {
                var isChecked = $checkbox.is(':checked');
                // Set the button's state
                $widget.data('state', (isChecked) ? "on" : "off");
                // Set the button's icon
                $widget.find('.state-icon')
                    .removeClass()
                    .addClass('state-icon ' + settings[$widget.data('state')].icon);
                // Update the button's color
                if (isChecked) {
                    $widget.addClass(style + color + ' active');
                } else {
                    $widget.removeClass(style + color + ' active');
                }
            }
            //// Initialization
            function init() {
                if ($widget.data('checked') == true) {
                    $checkbox.prop('checked', !$checkbox.is(':checked'));
                }
                updateDisplay();
                // Inject the icon if applicable
                if ($widget.find('.state-icon').length == 0) {
                    $widget.prepend('<span class="state-icon ' + settings[$widget.data('state')].icon + '"></span>');
                }
            }
            init();
        });

        $('#get-checked-data').on('click', function (event) {
            event.preventDefault();
            var checkedItems = {}, counter = 0;
            $("#check-list-box li.active").each(function (idx, li) {
                checkedItems[counter] = $(li).text();
                counter++;
            });
            $('#display-json').html(JSON.stringify(checkedItems, null, '\t'));
        });
    //});
</script>